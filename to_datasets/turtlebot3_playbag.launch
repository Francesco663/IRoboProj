<launch>
  <!-- Arguments -->
  <arg name="model" default="waffle_pi"/>
  <arg name="bag_name" default="fixed_slam_easy"/>
  <arg name="tf2_map2odom" default="0 0 0 0 0 0 map odom"/>
  <arg name="tf2_odom2base_footprint" default="0 0 0 0 0 0 odom base_footprint"/>
  <arg name="tf2_base_footprint2base_link" default="0 0 0 0 0 0 base_footprint base_link"/>
  <arg name="tf2_base_link2base_scan" default="0 0 0 0 0 0 base_link base_scan"/>
  <arg name="tf2_base_link2imu_link" default="0 0 0 0 0 0 base_link imu_link"/>
  <!-- Ground Truth -->
  <arg name="tf2_map_odom" default="0 0 0 0 0 0 map odom"/>
  <arg name="tf2_map_mocap" default="0.935 1.34 -0.023 0.001 -0.003 0.737 0.676 mocap map"/>


  <!-- Turtlebot3 -->
  <include file="$(find turtlebot3_bringup)/launch/turtlebot3_remote.launch">
    <arg name="model" value="$(arg model)" />
  </include>

  <!-- Map server -->

  <!-- TF -->
  <node pkg="tf2_ros" type="static_transform_publisher" name="tf2_map2odom" required="true"
       args="$(arg tf2_map2odom)"/>
  <node pkg="tf2_ros" type="static_transform_publisher" name="tf2_odom2base_footprint" required="true"
       args="$(arg tf2_odom2base_footprint)"/>
  <node pkg="tf2_ros" type="static_transform_publisher" name="tf2_base_footprint2base_link" required="true"
       args="$(arg tf2_base_footprint2base_link)"/>
  <node pkg="tf2_ros" type="static_transform_publisher" name="tf2_base_link2base_scan" required="true"
       args="$(arg tf2_base_link2base_scan)"/>
  <node pkg="tf2_ros" type="static_transform_publisher" name="tf2_base_link2imu_link" required="true"
      args="$(arg tf2_base_link2imu_link)"/>

     <!-- map-odom -->
    <node pkg="tf2_ros" type="static_transform_publisher" name="tf2_map_odom" required="true"
        args="$(arg tf2_map_odom)"/>

    <!-- mocap-map -->
    <node pkg="tf2_ros" type="static_transform_publisher" name="tf2_map_mocap" required="true"
      args="$(arg tf2_map_mocap)"/>

  
  <!-- ROSBAG -->
  <param name="/use_sim_time" value="true"/>
  <node pkg="rosbag" type="play" name="rosbag_player" 
          args="--clock $(find turtlebot3_datasets)/data/$(arg bag_name).bag"/>

  <!-- EKF robot localisation -->
  <node pkg="robot_localization" type="ekf_localization_node" name="robot_localization_ekf_node_odom" clear_params="false">
    <param name="frequency" value="10." />
    <param name="sensor_timeout" value="0.2" />
    <param name="two_d_mode" value="true" />
    <param name="publish_tf" value="true" />
    <param name="map_frame" value="map" />
    <param name="odom_frame" value="odom" />
    <param name="base_link_frame" value="base_link" />
    <param name="world_frame" value="odom" />
    <param name="odom0" value="odom" />
    <rosparam param="odom0_config">
      [true, true, false,
       false, false, true,
       true, true, false,
       false, false, true,
       false, false, false]</rosparam>
    <param name="odom0_differential" value="false"/>
    <param name="imu0_differential" value="true"/>
    <param name="imu0" value="imu_link" />
    <rosparam param="imu0_config">
      [false, false, false,
       false, false, true,
       false, false, false,
       false, false, true,
       false, false, false]</rosparam>
    <rosparam param="initial_state">
     [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]</rosparam>

  </node>

  <node pkg="turtlebot3_datasets" type="odom_to_path.py" name="odom_to_path" />
  <node pkg="turtlebot3_datasets" type="odom_to_path2.py" name="odom_to_path2" />


  <!-- AMCL-->
  <!--include file="$(find turtlebot3_navigation)/launch/amcl.launch"/-->

  <!-- Groundtruth path -->

  <!-- Estimated path -->

  <!-- Position error publisher -->

  <!-- rviz -->
  <node pkg="rviz" type="rviz" name="rviz" required="true" args="-d /home/pires/IRoboProj/turtle_sim_ekf.rviz"/>

</launch>